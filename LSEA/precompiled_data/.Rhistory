}
return(ac)
}
traj = sapply(1:n_iter, function(x) wright_fisher_selective(p, N, n_gen, w_11, w_12, w_22))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 2000))
library(ggplot2)
library(dplyr)
library(tidyr)
library(colorRamps)
library(reshape2)
jet = matlab.like2(100)
N <- 100 # effective population size
P_df <- data.frame()
wright_fisher_p <- function(i, j, N){
return(dbinom(x=j, size=2*N, prob = i/(2*N)))
}
for(i in 0:(2*N)){
for(j in 0:(2*N)){
# add to data.frame for viz below
P_df <- bind_rows(P_df, data.frame(i = i, j = j, p = wright_fisher_p(i, j, N)))
}
}
p <- ggplot(P_df, aes(x = i, y = j, fill = as.numeric(p))) +
geom_tile() + scale_fill_gradientn(colors=jet)
p
n_iter = 20
n_gen = 20
N = 1000
p = 0.5
wright_fisher_sim <- function(p, N, gens) {
answ = c(p)
for (i in 1:gens){
p_new = rbinom(1, 2*N, answ[length(answ)]) / (2*N)
answ = c(answ, p_new)
}
return(answ)
}
traj = sapply(1:n_iter, function(x) wright_fisher_sim(p, N, n_gen))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 1))
w_11 = 0.6
w_12 = 0.8
w_22 = 1
N = 1000
p = 0.5
wright_fisher_selective <- function(p, N, gens, w_11, w_12, w_22) {
ac = c(p * 2 * N)
for (x in 1:gens) {
total_fitness = p * p * w_11 + 2 * p * (1 - p) * w_12 + ((1 - p) ^ 2) * w_22
p_gf = (p * p * w_11 + p * (1 - p) * w_12)/total_fitness
p = rbinom(1, 2 * N, p_gf)/(2 * N)
ac = c(ac, p * 2 * N)
}
return(ac)
}
traj = sapply(1:n_iter, function(x) wright_fisher_selective(p, N, n_gen, w_11, w_12, w_22))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 2000))
n_gen = 100
traj = sapply(1:n_iter, function(x) wright_fisher_selective(p, N, n_gen, w_11, w_12, w_22))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 2000))
w_12 = 1
traj = sapply(1:n_iter, function(x) wright_fisher_selective(p, N, n_gen, w_11, w_12, w_22))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 2000))
w_11 = 0.6
w_12 = 1
w_22 = 1
N = 100000
p = 0.5
n_gen = 100
wright_fisher_selective <- function(p, N, gens, w_11, w_12, w_22) {
ac = c(p * 2 * N)
for (x in 1:gens) {
total_fitness = p * p * w_11 + 2 * p * (1 - p) * w_12 + ((1 - p) ^ 2) * w_22
p_gf = (p * p * w_11 + p * (1 - p) * w_12)/total_fitness
p = rbinom(1, 2 * N, p_gf)/(2 * N)
ac = c(ac, p * 2 * N)
}
return(ac)
}
traj = sapply(1:n_iter, function(x) wright_fisher_selective(p, N, n_gen, w_11, w_12, w_22))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 2000))
head(traj)
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 2000))
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 200000))
w_11 = 0.6
w_12 = 1
w_22 = 1
N = 1000000
p = 0.5
n_gen = 100
wright_fisher_selective <- function(p, N, gens, w_11, w_12, w_22) {
ac = c(p * 2 * N)
for (x in 1:gens) {
total_fitness = p * p * w_11 + 2 * p * (1 - p) * w_12 + ((1 - p) ^ 2) * w_22
p_gf = (p * p * w_11 + p * (1 - p) * w_12)/total_fitness
p = rbinom(1, 2 * N, p_gf)/(2 * N)
ac = c(ac, p * 2 * N)
}
return(ac)
}
traj = sapply(1:n_iter, function(x) wright_fisher_selective(p, N, n_gen, w_11, w_12, w_22))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 2 * N))
n_gen = 300
traj = sapply(1:n_iter, function(x) wright_fisher_selective(p, N, n_gen, w_11, w_12, w_22))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 2 * N))
hist(traj[301, ])
n_gen = 500
traj = sapply(1:n_iter, function(x) wright_fisher_selective(p, N, n_gen, w_11, w_12, w_22))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 2 * N))
hist(traj[501, ])
n_gen = 1000
traj = sapply(1:n_iter, function(x) wright_fisher_selective(p, N, n_gen, w_11, w_12, w_22))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 2 * N))
hist(traj[501, ])
n_iter = 200
traj = sapply(1:n_iter, function(x) wright_fisher_selective(p, N, n_gen, w_11, w_12, w_22))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 2 * N))
hist(traj[501, ])
library(ggplot2)
library(dplyr)
library(tidyr)
library(colorRamps)
library(reshape2)
jet = matlab.like2(100)
N <- 10 # effective population size
P_df <- data.frame()
wright_fisher_p <- function(i, j, N){
return(dbinom(j, 2 * N, i/(2 * N)))
}
for(i in 0:(2*N)){
for(j in 0:(2*N)){
# add to data.frame for viz below
P_df <- bind_rows(P_df, data.frame(i = i, j = j, p = wright_fisher_p(i, j, N)))
}
}
p <- ggplot(P_df, aes(x = i, y = j, fill = as.numeric(p))) +
geom_tile() + scale_fill_gradientn(colors=jet)
p
n_iter = 20
n_gen = 20
N = 1000
p = 0.5
wright_fisher_sim <- function(p, N, gens) {
p_vec = c(p)
for (x in 1:gens) {
p = rbinom(1, 2 * N, p)/(2 * N)
p_vec = c(p_vec, p)
}
return(p_vec)
}
traj = sapply(1:n_iter, function(x) wright_fisher_sim(p, N, n_gen))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 1))
n_iter = 20
n_gen = 20
N = 1000
p = 0.5
wright_fisher_sim <- function(p, N, gens) {
p_vec = c(p)
for (x in 1:gens) {
p = rbinom(1, 2 * N, p)/(2 * N)
p_vec = c(p_vec, p)
}
return(p_vec)
}
traj = sapply(1:n_iter, function(x) wright_fisher_sim(p, N, n_gen))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 1))
n_iter = 20
n_gen = 20
N = 10
p = 0.5
wright_fisher_sim <- function(p, N, gens) {
p_vec = c(p)
for (x in 1:gens) {
p = rbinom(1, 2 * N, p)/(2 * N)
p_vec = c(p_vec, p)
}
return(p_vec)
}
traj = sapply(1:n_iter, function(x) wright_fisher_sim(p, N, n_gen))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 1))
n_iter = 20
n_gen = 20
N = 10000
p = 0.5
wright_fisher_sim <- function(p, N, gens) {
p_vec = c(p)
for (x in 1:gens) {
p = rbinom(1, 2 * N, p)/(2 * N)
p_vec = c(p_vec, p)
}
return(p_vec)
}
traj = sapply(1:n_iter, function(x) wright_fisher_sim(p, N, n_gen))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 1))
w_11 = 0.6
w_12 = 0.8
w_22 = 1
N = 10000
p = 0.5
wright_fisher_selective <- function(p, N, gens, w_11, w_12, w_22) {
ac = c(p * 2 * N)
for (x in 1:gens) {
total_fitness = p * p * w_11 + 2 * p * (1 - p) * w_12 + ((1 - p) ^ 2) * w_22
p_gf = (p * p * w_11 + p * (1 - p) * w_12)/total_fitness
p = rbinom(1, 2 * N, p_gf)/(2 * N)
ac = c(ac, p * 2 * N)
}
return(ac)
}
traj = sapply(1:n_iter, function(x) wright_fisher_selective(p, N, n_gen, w_11, w_12, w_22))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 2 * N))
w_12 = 1
traj = sapply(1:n_iter, function(x) wright_fisher_selective(p, N, n_gen, w_11, w_12, w_22))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 2 * N))
w_11 = 0.6
w_12 = 1
w_22 = 0.6
N = 10000
p = 0.5
wright_fisher_selective <- function(p, N, gens, w_11, w_12, w_22) {
ac = c(p * 2 * N)
for (x in 1:gens) {
total_fitness = p * p * w_11 + 2 * p * (1 - p) * w_12 + ((1 - p) ^ 2) * w_22
p_gf = (p * p * w_11 + p * (1 - p) * w_12)/total_fitness
p = rbinom(1, 2 * N, p_gf)/(2 * N)
ac = c(ac, p * 2 * N)
}
return(ac)
}
traj = sapply(1:n_iter, function(x) wright_fisher_selective(p, N, n_gen, w_11, w_12, w_22))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 2 * N))
w_11 = 0.8
w_12 = 1
w_22 = 0.2
N = 10000
p = 0.5
wright_fisher_selective <- function(p, N, gens, w_11, w_12, w_22) {
ac = c(p * 2 * N)
for (x in 1:gens) {
total_fitness = p * p * w_11 + 2 * p * (1 - p) * w_12 + ((1 - p) ^ 2) * w_22
p_gf = (p * p * w_11 + p * (1 - p) * w_12)/total_fitness
p = rbinom(1, 2 * N, p_gf)/(2 * N)
ac = c(ac, p * 2 * N)
}
return(ac)
}
traj = sapply(1:n_iter, function(x) wright_fisher_selective(p, N, n_gen, w_11, w_12, w_22))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 2 * N))
library(ggplot2)
library(dplyr)
library(tidyr)
library(colorRamps)
library(reshape2)
jet = matlab.like2(100)
n_iter = 50
n_gen = 20
N = 100
p = 0.5
wright_fisher_sim <- function(p, N, gens) {
answ = c(p)
for (i in 1:gens){
p_new = rbinom(1, 2*N, answ[length(answ)]) / (2*N)
answ = c(answ, p_new)
}
return(answ)
}
traj = sapply(1:n_iter, function(x) wright_fisher_sim(p, N, n_gen))
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 1))
traj
dim(traj)
sum(traj[21, ] == 0)/50
p = 0.1
traj = sapply(1:n_iter, function(x) wright_fisher_sim(p, N, n_gen))
sum(traj[21, ] == 0)/50
tr_df = as.data.frame(traj)
tr_df$generation = 1:nrow(tr_df)
plot_df = melt(tr_df, id.vars='generation')
ggplot(plot_df, aes(x=generation, y=value, group=variable)) + geom_line() +
scale_y_continuous(limits=c(0, 1))
as.integer(3.7)
a - matrix(81, 612, 2106, 59449)
a
a = matrix(81, 612, 2106, 59449)
a
a
a = matrix(c(81, 612, 2106, 59449), 2, 2)
a
fisher.test(a)
fisher.test(a)$p.value
install.packages("whitening")
library(whitening)
a = matrix(c(2, 4, 6, 8, 1, 3, 5, 7, 4, 12, 8, 2, 3, 11, 7, 1), nrow=4, ncol=4)
a
whiten(a, method="ZCA")
whiten(a, center = 0, method="ZCA")
whiten(a, center = 1, method="ZCA")
cor(a)
cor(whiten(a, center = 1, method="ZCA"))
cm = cor(a)
cm
cm %^% (-1/2)
sqrtm(cm)
install.packages("expm")
library(expm)
sqrtm(cm)
inv(sqrtm(cm))
install.packages("matlib")
inv(sqrtm(cm))
library(matlab)
inv(sqrtm(cm))
library(matlib)
log10(0.05)
chppsr(1,2)
choose(1,2)
library(dplyr)
spread
library(tidyr)
a = data.frame(a = as.factor(c('a', 'b')), x=c(3, 5))
a
spread(a, key=a, value=x)
a = data.frame(a = as.factor(c('a', 'b', 'a', 'a')), x=c(3, 5, 11, 25))
a
spread(a, key=a, value=x)
table(a)
library(ggplot2)
u = 0.00001
p = 1
a = 3
a[-1]
a[length(a)]
u = 0.00001
p = 1
for (i in 1:100000) {
p1 = p[length(p)] * (1 - u)
p = c(p, p1)
}
p[100000]
v = 0.000002
u = 0.00001
v = 0.000002
p = 1
for (i in 1:99999) {
p1 = p[length(p)] * (1 - u)
p = c(p, p1)
}
pp = 1
for (i in 1:99999) {
pp1 = pp[length(pp)] * (1 - u) + (1 - pp[length(pp)]) * v
pp = c(pp, pp1)
}
x = data.frame(generation=1:100000, irreversible=p,
reversible=pp)
library(reshape2)
y = melt(x, id.vars='generation')
ggplot(y, aes(x=generation, y=value, col=variable)) + geom_line(lwd=1)
source('/mnt/2EA01BDBA01BA7FB/Working issues/Teaching/Population Genetics (Stepik)/m1.R', echo=TRUE)
ggplot(y, aes(x=generation, y=value, col=variable)) + geom_line(lwd=1) +
theme_bw() + scale_y_continuous(limits=c(0, 1))
ggplot(y, aes(x=generation/1000, y=value, col=variable)) + geom_line(lwd=1) +
theme_bw() + scale_y_continuous(limits=c(0, 1))
library(ggplot2)
library(reshape2)
for (i in 1:100){
P = c(P, P[length(P)] + 0.25*H[length(H)])
Q = c(Q, Q[length(Q)] + 0.25*H[length(H)])
H = c(H, 0.5*H[length(H)])
}
P = 0.49
H = 0.42
Q = 0.09
for (i in 1:100){
P = c(P, P[length(P)] + 0.25*H[length(H)])
Q = c(Q, Q[length(Q)] + 0.25*H[length(H)])
H = c(H, 0.5*H[length(H)])
}
P = 0.49
H = 0.42
Q = 0.09
for (i in 1:99){
P = c(P, P[length(P)] + 0.25*H[length(H)])
Q = c(Q, Q[length(Q)] + 0.25*H[length(H)])
H = c(H, 0.5*H[length(H)])
}
gt_freq = as.data.frame(generation=1:100, P=P, H=H, Q=Q)
gt_freq = data.frame(generation=1:100, P=P, H=H, Q=Q)
tpl_gt = melt(gt_freq, id.vars='generation')
ggplot(tpl_gt, aes(x=generation, y=value, col=variable)) + geom_line(lwd=1) +
theme_bw() + geom_hline(yintercept = 0.7, lty=2) +
geom_hline(yintercept = 0.3, lty=2)
P = 0.49
H = 0.42
Q = 0.09
for (i in 1:9){
P = c(P, P[length(P)] + 0.25*H[length(H)])
Q = c(Q, Q[length(Q)] + 0.25*H[length(H)])
H = c(H, 0.5*H[length(H)])
}
gt_freq = data.frame(generation=1:10, P=P, H=H, Q=Q)
tpl_gt = melt(gt_freq, id.vars='generation')
ggplot(tpl_gt, aes(x=generation, y=value, col=variable)) + geom_line(lwd=1) +
theme_bw() + geom_hline(yintercept = 0.7, lty=2) +
geom_hline(yintercept = 0.3, lty=2)
ggplot(tpl_gt, aes(x=generation, y=value, col=variable)) + geom_line(lwd=1) +
theme_bw() + geom_hline(yintercept = 0.7, lty=2) +
geom_hline(yintercept = 0.3, lty=2) +
scale_y_continuous(limits=c(0, 1))
ggplot(tpl_gt, aes(x=generation, y=value, col=variable)) + geom_line(lwd=1) +
theme_bw() + geom_hline(yintercept = 0.7, lty=2) +
geom_hline(yintercept = 0.3, lty=2) +
scale_y_continuous(limits=c(0, 1)) + guides(col=F)
install.packages("sjPLot")
install.packages("sjPlot")
library(sjPlot)
dist_chisq(chi2 = 1.2, deg.f = 2, p = 0.05)
dist_chisq(chi2 = 1.2, deg.f = 2)
dist_chisq(chi2 = 1.2, deg.f = 2) + theme_bw()
dist_chisq(deg.f = 2, p = 0.05) + theme_bw()
dist_chisq(chi2 = 1.2, deg.f = 2) + theme_bw()
dist_chisq(deg.f = 2, p = 0.05) + theme_bw()
dist_chisq(chi2 = 1.2, deg.f = 2) + theme_bw()
library(ggplot2)
setwd('/media/barbitoff/DATA/Working issues/BI_Science/Systems Genetics/Pleiotropy/Paper/ukb_phewas/LSEA/precompiled_data')
cverse = read.table('clumpverse_no_hla.tsv', sep='\t')
head(cverse)
ggplot(cverse, aes(x=V4)) + geom_histogram() + theme_bw()
ggplot(cverse, aes(x=1, y=V4)) + geom_violin(fill='red', alpha=0.6, col='black') +
geom_boxplot(width=0.4, lwd=0.6, fill='white', col='black', outlier.shape = NA)
median(cverse$V4)
